apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'dexprotector'

int vsCode =  1
def vsName = "1.0.0"

android {
//    SKIP ERROR
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.vnpay.anlmk"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode vsCode
        versionName vsName
        multiDexEnabled true
        resConfigs("vn")// NGÔN NGỮ SUPPORT
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true // VECTORDRAWABLE ENABLE

    }
    signingConfigs {
        releaseConfig {
            Properties localProps = new Properties()
            localProps.load(new FileInputStream(file('../local.properties')))

            storeFile file(localProps['storeFile'])
            storePassword localProps['storePassword']
            keyAlias localProps['keyAlias']
            keyPassword localProps['keyPassword']
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            shrinkResources true
            zipAlignEnabled true
            pseudoLocalesEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
            ext.set("dexprotector.configFile", "${projectDir}/../ConfigDexprotector.xml")
        }
        debug {
            signingConfig signingConfigs.releaseConfig
//            signingConfigs signingConfigs.releaseConfig
        }
    }
    //FLAVOR CONFIG
    flavorDimensions "default"
    productFlavors {
        vtest {
            buildConfigField "boolean", "SERVER", "false"
        }
        vlive {
            buildConfigField "boolean", "SERVER", "true"
        }
    }
    // CHANGE FILE OUTPUT NAME
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def buildType = variant.variantData.variantConfiguration.buildType.name
            if (buildType == "release") {
                def flavor = variant.productFlavors[0].name

                def newApkName = flavor + ".apk"

                outputFileName = new File(newApkName)
            }
        }
    }
    // TARGET JAVA VERSION
    compileOptions {
        setTargetCompatibility(1.8)
        setSourceCompatibility(1.8)
    }
    sourceSets {
        test.java.srcDirs += 'src/test/java'
        androidTest.java.srcDirs += 'src/androidTest/java'
    }

//    dataBinding {
//        enabled = true
//    }
}

//kapt {
//    generateStubs = true
//}

task runUnitTests(dependsOn: [':app:testDebugUnitTest']) {
    description 'Run all unit tests'
}

task runAcceptanceTests(dependsOn: [':app:connectedAndroidTest']) {
    description 'Run all acceptance tests.'
}

dependencies {


    //KOTLIN
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //TEST
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "junit:junit:4.12"
    androidTestImplementation "org.robolectric:robolectric:4.2.1"
    androidTestImplementation "androidx.test:core:1.2.0"
    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test.ext:truth:1.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.2.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //COMPAT
    implementation("androidx.appcompat:appcompat:1.1.0-rc01")
    //COMPAT for old ui
    implementation("androidx.legacy:legacy-support-v4:1.0.0")
    //CONSTRAINT LAYOUT
    implementation("androidx.constraintlayout:constraintlayout:1.1.3")
    // GOOGLE MATERIAL DESIGN for layout
    implementation("com.google.android.material:material:1.1.0-alpha09")

    //fabric
//    implementation('com.crashlytics.sdk.android:crashlytics:17.2.2@aar') {
//        transitive = true;
//    }
    //GOOGLE SERIVICE for MAPS and LOCATION
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    // ROOT DETECT for FINGERPRINT
    implementation 'com.google.android.gms:play-services-safetynet:17.0.0'
    //VISION for QR
    implementation 'com.google.android.gms:play-services-vision:19.0.0'
    //FCM for OTT
    implementation 'com.google.firebase:firebase-messaging:22.0.0'
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'

    implementation 'com.google.firebase:firebase-analytics:19.0.0'
    implementation 'com.google.firebase:firebase-auth:17.0.0'
    // MAPS UTILS
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    // ZXING FOR QR
    implementation 'com.google.zxing:core:3.3.2'
    // GSON FOR NETWORK
    implementation 'com.google.code.gson:gson:2.8.5'
    // LOAD IMAGE
    implementation 'com.squareup.picasso:picasso:2.5.2'
    // OKHTTP NETWORK
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    //KOIN DI
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    //MULTIDEX
    implementation 'androidx.multidex:multidex:2.0.1'
    //RECYCLER VIEW
    implementation 'androidx.recyclerview:recyclerview:1.1.0-rc01'
    //VIEWPAGER
    implementation 'androidx.viewpager:viewpager:1.0.0'

    // ViewModel and LiveData
    implementation("androidx.lifecycle:lifecycle-extensions:2.0.0")
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation("androidx.lifecycle:lifecycle-common-java8:2.0.0")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-alpha02")
    //OTT
    implementation ('com.vnpay.ott:ott:1.2.14'){ changing = true }
    //VÂN TAY
    implementation ('com.vnpay.fingerV2:fingerV2:1.0.7'){ changing = true }
    // STORAGE Secure
    implementation ('com.vnpay.supersecure:supersecure:1.0.22'){ changing = true }


    //RETROFIT
    implementation "com.squareup.retrofit2:retrofit:2.6.0"
    implementation "com.squareup.retrofit2:converter-gson:2.5.0"
//   KAPT COMPILER
//    kapt 'com.android.databinding:compiler:2.3.1'

    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:17.1.0'


    //Crop image camera
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.7.+'

//    cricle image
    implementation 'de.hdodenhof:circleimageview:3.1.0'
}

apply plugin: 'com.google.gms.google-services'